# FLAGS: --trace-execute -r
# FILE: res/main.pexe
startinfo = 3640
envc = 3644 (0)
argc = 3648 (1)
argv = 3652
envp = 3660
auxv = 3664
  %69(int32). alloca %41(int32) align=4
    %69 = 1048572  %41 = 4
  %70(int32). alloca %46(int32) align=4
    %70 = 1048556  %46 = 16
  %71(int32). alloca %41(int32) align=4
    %71 = 1048552  %41 = 4
  store dest:%71(int32) value:%39(int32) align=1
    %71 = 1048552  %39 = 3640
  %72(int32). load src:%39(int32) align=1
    %72 = 0  %39 = 3640
  %73(int32). binop op:add(0) %39(int32) %42(int32) (flags:0)
    %73 = 3648  %39 = 3640  %42 = 8
  %74(int32). load src:%73(int32) align=1
    %74 = 1  %73 = 3648
  %75(int32). binop op:add(0) %74(int32) %41(int32) (flags:0)
    %75 = 5  %74 = 1  %41 = 4
  %76(int32). binop op:mul(2) %75(int32) %41(int32) (flags:0)
    %76 = 20  %75 = 5  %41 = 4
  %77(int32). binop op:add(0) %39(int32) %76(int32) (flags:0)
    %77 = 3660  %39 = 3640  %76 = 20
  %78(int32). binop op:add(0) %39(int32) %41(int32) (flags:0)
    %78 = 3644  %39 = 3640  %41 = 4
  %79(int32). load src:%78(int32) align=1
    %79 = 0  %78 = 3644
  %80(int32). binop op:add(0) %74(int32) %55(int32) (flags:0)
    %80 = 6  %74 = 1  %55 = 5
  %81(int32). binop op:add(0) %80(int32) %79(int32) (flags:0)
    %81 = 6  %80 = 6  %79 = 0
  %82(int32). binop op:mul(2) %81(int32) %41(int32) (flags:0)
    %82 = 24  %81 = 6  %41 = 4
  %83(int32). binop op:add(0) %39(int32) %82(int32) (flags:0)
    %83 = 3664  %39 = 3640  %82 = 24
  store dest:%32(int32) value:%77(int32) align=1
    %32 = 1336  %77 = 3660
  store dest:%16(int32) value:%71(int32) align=1
    %16 = 1024  %71 = 1048552
  br 1
bb = 1
  forwardtyperef %88(int32) int32
  %84(int32). phi bb:0=>%83(int32) bb:3=>%88(int32)
    %84 = 3664  %83 = 3664
  %85(int32). load src:%84(int32) align=1
    %85 = 32  %84 = 3664
  switch value:%85(int32) [default:3] [0 => bb:4] [32 => bb:2]
    %85 = 32
bb = 2
  %86(int32). binop op:add(0) %84(int32) %41(int32) (flags:0)
    %86 = 3668  %84 = 3664  %41 = 4
  %87(int32). load src:%86(int32) align=1
    %87 = 4  %86 = 3668
  store dest:%18(int32) value:%87(int32) align=1
    %18 = 1060  %87 = 4
  br 3
bb = 3
  %88(int32). binop op:add(0) %84(int32) %42(int32) (flags:0)
    %88 = 3672  %84 = 3664  %42 = 8
  br 1
bb = 1
  forwardtyperef %88(int32) int32
  %84(int32). phi bb:0=>%83(int32) bb:3=>%88(int32)
    %84 = 3672  %88 = 3672
  %85(int32). load src:%84(int32) align=1
    %85 = 0  %84 = 3672
  switch value:%85(int32) [default:3] [0 => bb:4] [32 => bb:2]
    %85 = 0
bb = 4
  %89(int32). load src:%18(int32) align=1
    %89 = 4  %18 = 1060
  %90(int1). cmp2 op:icmp_eq(32) %89(int32) %40(int32)
    %90 = 0  %89 = 4  %40 = 0
  br %90(int1) ? 5 : 6
    %90 = 0
bb = 6
  %91(int32). call indirect %89(int32) args: %24(int32) %17(int32) %47(int32)
    NACL_IRT_QUERY(1196 (nacl-irt-fdio-0.1), 1028, 32)
  %92(int1). cmp2 op:icmp_eq(32) %91(int32) %47(int32)
    %92 = 1  %91 = 32  %47 = 32
  br %92(int1) ? 10 : 7
    %92 = 1
bb = 10
  call %3(void(int32,int32,int32)) args: %26(int32) %21(int32) %56(int32)
    %26 = 1236  %21 = 1152  %56 = 24  
function = 3 bb = 0
  %43(int32). load src:%18(int32) align=1
    %43 = 4  %18 = 1060
  %44(int1). cmp2 op:icmp_eq(32) %43(int32) %42(int32)
    %44 = 0  %43 = 4  %42 = 0
  br %44(int1) ? 1 : 2
    %44 = 0
bb = 2
  %45(int32). call indirect %43(int32) args: %39(int32) %40(int32) %41(int32)
    NACL_IRT_QUERY(1236 (nacl-irt-basic-0.1), 1152, 24)
  %46(int1). cmp2 op:icmp_eq(32) %45(int32) %41(int32)
    %46 = 1  %45 = 24  %41 = 24
  br %46(int1) ? 4 : 3
    %46 = 1
bb = 4
  ret
function = 2  bb = 10
  %96(int32). load src:%18(int32) align=1
    %96 = 4  %18 = 1060
  %97(int1). cmp2 op:icmp_eq(32) %96(int32) %40(int32)
    %97 = 0  %96 = 4  %40 = 0
  br %97(int1) ? 11 : 12
    %97 = 0
bb = 12
  %98(int32). call indirect %96(int32) args: %27(int32) %22(int32) %48(int32)
    NACL_IRT_QUERY(1255 (nacl-irt-memory-0.3), 1176, 12)
  %99(int1). cmp2 op:icmp_eq(32) %98(int32) %48(int32)
    %99 = 1  %98 = 12  %48 = 12
  br %99(int1) ? 18 : 13
    %99 = 1
bb = 18
  call %3(void(int32,int32,int32)) args: %30(int32) %23(int32) %42(int32)
    %30 = 1315  %23 = 1188  %42 = 8  
function = 3 bb = 0
  %43(int32). load src:%18(int32) align=1
    %43 = 4  %18 = 1060
  %44(int1). cmp2 op:icmp_eq(32) %43(int32) %42(int32)
    %44 = 0  %43 = 4  %42 = 0
  br %44(int1) ? 1 : 2
    %44 = 0
bb = 2
  %45(int32). call indirect %43(int32) args: %39(int32) %40(int32) %41(int32)
    NACL_IRT_QUERY(1315 (nacl-irt-tls-0.1), 1188, 8)
  %46(int1). cmp2 op:icmp_eq(32) %45(int32) %41(int32)
    %46 = 1  %45 = 8  %41 = 8
  br %46(int1) ? 4 : 3
    %46 = 1
bb = 4
  ret
function = 2  bb = 18
  %110(int1). cmp2 op:icmp_eq(32) %72(int32) %40(int32)
    %110 = 1  %72 = 0  %40 = 0
  br %110(int1) ? 23 : 19
    %110 = 1
bb = 23
  %125(int32). binop op:add(0) %36(int32) %43(int32) (flags:0)
    %125 = 1680  %36 = 1352  %43 = 328
  %126(int32). load src:%125(int32) align=1
    %126 = 0  %125 = 1680
  %127(int1). cmp2 op:icmp_eq(32) %126(int32) %40(int32)
    %127 = 1  %126 = 0  %40 = 0
  br %127(int1) ? 24 : 25
    %127 = 1
bb = 24
  %128(int32). binop op:add(0) %36(int32) %45(int32) (flags:0)
    %128 = 1684  %36 = 1352  %45 = 332
  %129(int32). binop op:add(0) %36(int32) %43(int32) (flags:0)
    %129 = 1680  %36 = 1352  %43 = 328
  store dest:%129(int32) value:%128(int32) align=1
    %129 = 1680  %128 = 1684
  %130(int32). binop op:add(0) %36(int32) %45(int32) (flags:0)
    %130 = 1684  %36 = 1352  %45 = 332
  br 25
bb = 25
  %131(int32). phi bb:24=>%130(int32) bb:23=>%126(int32)
    %131 = 1684  %130 = 1684
  %132(int32). binop op:add(0) %131(int32) %41(int32) (flags:0)
    %132 = 1688  %131 = 1684  %41 = 4
  %133(int32). load src:%132(int32) align=1
    %133 = 0  %132 = 1688
  %134(int1). cmp2 op:icmp_sgt(38) %133(int32) %50(int32)
    %134 = 0  %133 = 0  %50 = 31
  br %134(int1) ? 27 : 26
    %134 = 0
bb = 26
  %135(int32). binop op:add(0) %133(int32) %44(int32) (flags:0)
    %135 = 1  %133 = 0  %44 = 1
  store dest:%132(int32) value:%135(int32) align=1
    %132 = 1688  %135 = 1
  %136(int32). binop op:add(0) %131(int32) %42(int32) (flags:0)
    %136 = 1692  %131 = 1684  %42 = 8
  %137(int32). binop op:mul(2) %133(int32) %41(int32) (flags:0)
    %137 = 0  %133 = 0  %41 = 4
  %138(int32). binop op:add(0) %136(int32) %137(int32) (flags:0)
    %138 = 1692  %136 = 1692  %137 = 0
  store dest:%138(int32) value:%14(void()) align=1
    %138 = 1692  %14 = 248
  br 27
bb = 27
  %139(int8). load src:%35(int32) align=1
    %139 = 0  %35 = 1345
  %140(int1). cast op:trunc(0) %139(int8)
    %140 = 0  %139 = 0
  br %140(int1) ? 28 : 29
    %140 = 0
bb = 29
  %143(int8). cast op:zext(1) %66(int1)
    %143 = 1  %66 = 1
  store dest:%35(int32) value:%143(int8) align=1
    %35 = 1345  %143 = 1
  store dest:%33(int32) value:%38(int32) align=1
    %33 = 1340  %38 = 2496
  %144(int8). cast op:zext(1) %66(int1)
    %144 = 1  %66 = 1
  store dest:%34(int32) value:%144(int8) align=1
    %34 = 1344  %144 = 1
  br 30
bb = 30
  %145(int1). phi bb:28=>%142(int1) bb:29=>%66(int1)
    %145 = 1  %66 = 1
  %146(int32). vselect %145(int1) ? %51(int32) : %52(int32)
    %146 = 1155  %145 = 1  %51 = 1155
  store dest:%69(int32) value:%40(int32) align=1
    %69 = 1048572  %40 = 0
  %147(int32). load src:%22(int32) align=1
    %147 = 152  %22 = 1176
  %148(int32). call indirect %147(int32) args: %69(int32) %146(int32) %57(int32) %58(int32) %49(int32) %68(int64)
    NACL_IRT_MEMORY_MMAP(1048572, 1155, 3, 34, -1, 0)
      Searching from [1, 1)
      returning 4096, errno = 0
  %149(int1). cmp2 op:icmp_eq(32) %148(int32) %40(int32)
    %149 = 1  %148 = 0  %40 = 0
  br %149(int1) ? 32 : 31
    %149 = 1
bb = 32
  %153(int32). load src:%69(int32) align=1
    %153 = 4096  %69 = 1048572
  br 33
bb = 33
  %154(int32). phi bb:31=>%49(int32) bb:32=>%153(int32)
    %154 = 4096  %153 = 4096
  %155(int8). load src:%35(int32) align=1
    %155 = 1  %35 = 1345
  %156(int1). cast op:trunc(0) %155(int8)
    %156 = 1  %155 = 1
  br %156(int1) ? 34 : 35
    %156 = 1
bb = 34
  %157(int8). load src:%34(int32) align=1
    %157 = 1  %34 = 1344
  %158(int1). cast op:trunc(0) %157(int8)
    %158 = 1  %157 = 1
  br 36
bb = 36
  %161(int1). phi bb:34=>%158(int1) bb:35=>%66(int1)
    %161 = 1  %158 = 1
  %162(int32). vselect %161(int1) ? %51(int32) : %52(int32)
    %162 = 1155  %161 = 1  %51 = 1155
  %163(int32). binop op:add(0) %154(int32) %162(int32) (flags:0)
    %163 = 5251  %154 = 4096  %162 = 1155
  %164(int32). vselect %161(int1) ? %54(int32) : %40(int32)
    %164 = 1144  %161 = 1  %54 = 1144
  %165(int32). binop op:add(0) %154(int32) %59(int32) (flags:0)
    %165 = 4103  %154 = 4096  %59 = 7
  %166(int32). binop op:and(10) %165(int32) %60(int32) (flags:0)
    %166 = 4096  %165 = 4103  %60 = 4294967288
  %167(int32). binop op:add(0) %166(int32) %164(int32) (flags:0)
    %167 = 5240  %166 = 4096  %164 = 1144
  %168(int32). vselect %161(int1) ? %54(int32) : %40(int32)
    %168 = 1144  %161 = 1  %54 = 1144
  %169(int32). binop op:add(0) %166(int32) %168(int32) (flags:0)
    %169 = 5240  %166 = 4096  %168 = 1144
  %170(int1). cmp2 op:icmp_ugt(34) %169(int32) %163(int32)
    %170 = 0  %169 = 5240  %163 = 5251
  br %170(int1) ? 37 : 38
    %170 = 0
bb = 38
  %171(int32). load src:%33(int32) align=1
    %171 = 2496  %33 = 1340
  call %0(void(int32,int32,int32,int32,int1))(llvm.memcpy.p0i8.p0i8.i32) args: %166(int32) %171(int32) %168(int32) %44(int32) %67(int1)
    llvm.memcpy(dst_p:4096, src_p:2496, len:1144, align:1, is_volatile:0)
    %166 = 4096  %171 = 2496  %168 = 1144  %44 = 1  %67 = 0
  store dest:%167(int32) value:%167(int32) align=1
    %167 = 5240  %167 = 5240
  %172(int32). load src:%23(int32) align=1
    %172 = 164  %23 = 1188
  %173(int32). call indirect %172(int32) args: %167(int32)
    NACL_IRT_TLS_INIT(5240)
  %174(int32). call %15(int32())(llvm.nacl.read.tp) args:
    llvm.nacl.read.tp()
    %174 = 5240
  %175(int32). binop op:add(0) %174(int32) %53(int32) (flags:0)
    %175 = 4096  %174 = 5240  %53 = 4294966152
  %176(int32). binop op:add(0) %174(int32) %61(int32) (flags:0)
    %176 = 4104  %174 = 5240  %61 = 4294966160
  store dest:%175(int32) value:%176(int32) align=1
    %175 = 4096  %176 = 4104
  %177(int32). binop op:add(0) %36(int32) %43(int32) (flags:0)
    %177 = 1680  %36 = 1352  %43 = 328
  %178(int32). load src:%177(int32) align=1
    %178 = 1684  %177 = 1680
  %179(int1). cmp2 op:icmp_eq(32) %178(int32) %40(int32)
    %179 = 0  %178 = 1684  %40 = 0
  br %179(int1) ? 54 : 40
    %179 = 0
bb = 40
  %181(int32). phi bb:39=>%213(int32) bb:38=>%178(int32)
    %181 = 1684  %178 = 1684
  %182(int32). binop op:add(0) %181(int32) %41(int32) (flags:0)
    %182 = 1688  %181 = 1684  %41 = 4
  %183(int32). load src:%182(int32) align=1
    %183 = 1  %182 = 1688
  %184(int1). cmp2 op:icmp_sgt(38) %183(int32) %40(int32)
    %184 = 1  %183 = 1  %40 = 0
  br %184(int1) ? 41 : 54
    %184 = 1
bb = 41
  %185(int32). binop op:add(0) %181(int32) %62(int32) (flags:0)
    %185 = 2076  %181 = 1684  %62 = 392
  %186(int32). binop op:add(0) %181(int32) %63(int32) (flags:0)
    %186 = 2080  %181 = 1684  %63 = 396
  br 42
bb = 42
  forwardtyperef %197(int32) int32
  %187(int32). phi bb:41=>%183(int32) bb:44=>%197(int32)
    %187 = 1  %183 = 1
  forwardtyperef %189(int32) int32
  %188(int32). phi bb:41=>%183(int32) bb:44=>%189(int32)
    %188 = 1  %183 = 1
  %189(int32). binop op:add(0) %188(int32) %49(int32) (flags:0)
    %189 = 0  %188 = 1  %49 = 4294967295
  %190(int32). binop op:shl(7) %44(int32) %189(int32) (flags:0)
    %190 = 1  %44 = 1  %189 = 0
  %191(int32). binop op:add(0) %181(int32) %42(int32) (flags:0)
    %191 = 1692  %181 = 1684  %42 = 8
  %192(int32). binop op:mul(2) %189(int32) %41(int32) (flags:0)
    %192 = 0  %189 = 0  %41 = 4
  %193(int32). binop op:add(0) %191(int32) %192(int32) (flags:0)
    %193 = 1692  %191 = 1692  %192 = 0
  %194(int32). load src:%193(int32) align=1
    %194 = 248  %193 = 1692
  %195(int1). cmp2 op:icmp_eq(32) %188(int32) %187(int32)
    %195 = 1  %188 = 1  %187 = 1
  br %195(int1) ? 45 : 46
    %195 = 1
bb = 45
  store dest:%182(int32) value:%189(int32) align=1
    %182 = 1688  %189 = 0
  br 47
bb = 47
  %198(int1). cmp2 op:icmp_eq(32) %194(int32) %40(int32)
    %198 = 0  %194 = 248  %40 = 0
  br %198(int1) ? 43 : 48
    %198 = 0
bb = 48
  %199(int32). load src:%182(int32) align=1
    %199 = 0  %182 = 1688
  %200(int32). load src:%185(int32) align=1
    %200 = 0  %185 = 2076
  %201(int32). binop op:and(10) %200(int32) %190(int32) (flags:0)
    %201 = 0  %200 = 0  %190 = 1
  %202(int1). cmp2 op:icmp_eq(32) %201(int32) %40(int32)
    %202 = 1  %201 = 0  %40 = 0
  br %202(int1) ? 49 : 50
    %202 = 1
bb = 49
  call indirect %194(int32) args:
    %194 = 248 
function = 14 bb = 0
  ret
function = 2  bb = 49
  br 53
bb = 53
  %210(int32). load src:%182(int32) align=1
    %210 = 0  %182 = 1688
  %211(int1). cmp2 op:icmp_eq(32) %199(int32) %210(int32)
    %211 = 1  %199 = 0  %210 = 0
  %212(int32). binop op:add(0) %36(int32) %43(int32) (flags:0)
    %212 = 1680  %36 = 1352  %43 = 328
  %213(int32). load src:%212(int32) align=1
    %213 = 1684  %212 = 1680
  %214(int1). cmp2 op:icmp_eq(32) %213(int32) %181(int32)
    %214 = 1  %213 = 1684  %181 = 1684
  %215(int1). binop op:and(10) %211(int1) %214(int1) (flags:0)
    %215 = 1  %211 = 1  %214 = 1
  br %215(int1) ? 43 : 39
    %215 = 1
bb = 43
  %196(int1). cmp2 op:icmp_sgt(38) %188(int32) %44(int32)
    %196 = 0  %188 = 1  %44 = 1
  br %196(int1) ? 44 : 54
    %196 = 0
bb = 54
  %216(int32). binop op:add(0) %36(int32) %65(int32) (flags:0)
    %216 = 1412  %36 = 1352  %65 = 60
  %217(int32). load src:%216(int32) align=1
    %217 = 0  %216 = 1412
  %218(int1). cmp2 op:icmp_eq(32) %217(int32) %40(int32)
    %218 = 1  %217 = 0  %40 = 0
  br %218(int1) ? 56 : 55
    %218 = 1
bb = 56
  %219(int32). load src:%21(int32) align=1
    %219 = 8  %21 = 1152
  call indirect %219(int32) args: %40(int32)
    NACL_IRT_BASIC_EXIT(0)
