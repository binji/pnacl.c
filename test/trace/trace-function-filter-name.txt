# FLAGS: --trace-function-filter=_start
# FILE: res/main.pexe
function void @f12(i32 %p0) {  // BlockID = 12
%b0:
  %v0 = alloca i8, i32 %c1, align 4;
  %v1 = alloca i8, i32 %c6, align 4;
  %v2 = alloca i8, i32 %c1, align 4;
  store i32 %p0, i32* %v2, align 1;
  %v3 = load i32* %p0, align 1;
  %v4 = add i32 %p0, %c2;
  %v5 = load i32* %v4, align 1;
  %v6 = add i32 %v5, %c1;
  %v7 = mul i32 %v6, %c1;
  %v8 = add i32 %p0, %v7;
  %v9 = add i32 %p0, %c1;
  %v10 = load i32* %v9, align 1;
  %v11 = add i32 %v5, %c15;
  %v12 = add i32 %v11, %v10;
  %v13 = mul i32 %v12, %c1;
  %v14 = add i32 %p0, %v13;
  store i32 %v8, i32* @g15, align 1;
  store i32 %v2, i32* @g7, align 1;
  br label %b1;
%b1:
  declare i32 %v19;
  %v15 = phi i32 [%v14, %b0], [%v19, %b3];
  %v16 = load i32* %v15, align 1;
  switch i32 %v16 {
    default: br label %b3;
    i32 0: br label %b4;
    i32 32: br label %b2;
  }
%b2:
  %v17 = add i32 %v15, %c1;
  %v18 = load i32* %v17, align 1;
  store i32 %v18, i32* @g1, align 1;
  br label %b3;
%b3:
  %v19 = add i32 %v15, %c2;
  br label %b1;
%b4:
  %v20 = load i32* @g1, align 1;
  %v21 = icmp eq i32 %v20, %c0;
  br i1 %v21, label %b5, label %b6;
%b5:
  call void @f3(i32 @g5);
  unreachable;
%b6:
  %v22 = call i32 %v20(i32 @g8, i32 @g0, i32 %c7);
  %v23 = icmp eq i32 %v22, %c7;
  br i1 %v23, label %b10, label %b7;
%b7:
  %v24 = load i32* @g1, align 1;
  %v25 = icmp eq i32 %v24, %c0;
  br i1 %v25, label %b8, label %b9;
%b8:
  call void @f3(i32 @g5);
  unreachable;
%b9:
  %v26 = call i32 %v24(i32 @g9, i32 @g0, i32 %c7);
  br label %b10;
%b10:
  call void @f2(i32 @g10, i32 @g2, i32 %c16);
  %v27 = load i32* @g1, align 1;
  %v28 = icmp eq i32 %v27, %c0;
  br i1 %v28, label %b11, label %b12;
%b11:
  call void @f3(i32 @g5);
  unreachable;
%b12:
  %v29 = call i32 %v27(i32 @g11, i32 @g3, i32 %c8);
  %v30 = icmp eq i32 %v29, %c8;
  br i1 %v30, label %b18, label %b13;
%b13:
  %v31 = load i32* @g1, align 1;
  %v32 = icmp eq i32 %v31, %c0;
  br i1 %v32, label %b14, label %b15;
%b14:
  call void @f3(i32 @g5);
  unreachable;
%b15:
  %v33 = call i32 %v31(i32 @g12, i32 %v1, i32 %c6);
  %v34 = icmp eq i32 %v33, %c6;
  br i1 %v34, label %b17, label %b16;
%b16:
  call void @f2(i32 @g13, i32 %v1, i32 %c8);
  %v35 = add i32 @g3, %c2;
  store i32 @f13, i32* %v35, align 1;
  br label %b17;
%b17:
  %v36 = add i32 %v1, %c1;
  %v37 = load i32* %v36, align 1;
  store i32 %v37, i32* @g3, align 1;
  %v38 = add i32 %v1, %c2;
  %v39 = load i32* %v38, align 1;
  %v40 = add i32 @g3, %c1;
  store i32 %v39, i32* %v40, align 1;
  br label %b18;
%b18:
  call void @f2(i32 @g14, i32 @g4, i32 %c2);
  %v41 = icmp eq i32 %v3, %c0;
  br i1 %v41, label %b23, label %b19;
%b19:
  %v42 = add i32 @g20, %c3;
  %v43 = load i32* %v42, align 1;
  %v44 = icmp eq i32 %v43, %c0;
  br i1 %v44, label %b20, label %b21;
%b20:
  %v45 = add i32 @g20, %c5;
  %v46 = add i32 @g20, %c3;
  store i32 %v45, i32* %v46, align 1;
  %v47 = add i32 @g20, %c5;
  br label %b21;
%b21:
  %v48 = phi i32 [%v47, %b20], [%v43, %b19];
  %v49 = add i32 %v48, %c1;
  %v50 = load i32* %v49, align 1;
  %v51 = icmp sgt i32 %v50, %c10;
  br i1 %v51, label %b23, label %b22;
%b22:
  %v52 = add i32 %v50, %c4;
  store i32 %v52, i32* %v49, align 1;
  %v53 = add i32 %v48, %c2;
  %v54 = mul i32 %v50, %c1;
  %v55 = add i32 %v53, %v54;
  store i32 %v3, i32* %v55, align 1;
  br label %b23;
%b23:
  %v56 = add i32 @g20, %c3;
  %v57 = load i32* %v56, align 1;
  %v58 = icmp eq i32 %v57, %c0;
  br i1 %v58, label %b24, label %b25;
%b24:
  %v59 = add i32 @g20, %c5;
  %v60 = add i32 @g20, %c3;
  store i32 %v59, i32* %v60, align 1;
  %v61 = add i32 @g20, %c5;
  br label %b25;
%b25:
  %v62 = phi i32 [%v61, %b24], [%v57, %b23];
  %v63 = add i32 %v62, %c1;
  %v64 = load i32* %v63, align 1;
  %v65 = icmp sgt i32 %v64, %c10;
  br i1 %v65, label %b27, label %b26;
%b26:
  %v66 = add i32 %v64, %c4;
  store i32 %v66, i32* %v63, align 1;
  %v67 = add i32 %v62, %c2;
  %v68 = mul i32 %v64, %c1;
  %v69 = add i32 %v67, %v68;
  store i32 @f14, i32* %v69, align 1;
  br label %b27;
%b27:
  %v70 = load i8* @g19, align 1;
  %v71 = trunc i8 %v70 to i1;
  br i1 %v71, label %b28, label %b29;
%b28:
  %v72 = load i8* @g18, align 1;
  %v73 = trunc i8 %v72 to i1;
  br label %b30;
%b29:
  %v74 = zext i1 %c26 to i8;
  store i8 %v74, i8* @g19, align 1;
  store i32 @g22, i32* @g17, align 1;
  %v75 = zext i1 %c26 to i8;
  store i8 %v75, i8* @g18, align 1;
  br label %b30;
%b30:
  %v76 = phi i1 [%v73, %b28], [%c26, %b29];
  %v77 = select i1 %v76, i32 %c11, i32 %c12;
  store i32 %c0, i32* %v0, align 1;
  %v78 = load i32* @g3, align 1;
  %v79 = call i32 %v78(i32 %v0, i32 %v77, i32 %c17, i32 %c18, i32 %c9, i64 %c28);
  %v80 = icmp eq i32 %v79, %c0;
  br i1 %v80, label %b32, label %b31;
%b31:
  %v81 = call i32 @f15();
  %v82 = add i32 %v81, %c13;
  %v83 = load i32* %v82, align 1;
  store i32 %v79, i32* %v83, align 1;
  br label %b33;
%b32:
  %v84 = load i32* %v0, align 1;
  br label %b33;
%b33:
  %v85 = phi i32 [%c9, %b31], [%v84, %b32];
  %v86 = load i8* @g19, align 1;
  %v87 = trunc i8 %v86 to i1;
  br i1 %v87, label %b34, label %b35;
%b34:
  %v88 = load i8* @g18, align 1;
  %v89 = trunc i8 %v88 to i1;
  br label %b36;
%b35:
  %v90 = zext i1 %c26 to i8;
  store i8 %v90, i8* @g19, align 1;
  store i32 @g22, i32* @g17, align 1;
  %v91 = zext i1 %c26 to i8;
  store i8 %v91, i8* @g18, align 1;
  br label %b36;
%b36:
  %v92 = phi i1 [%v89, %b34], [%c26, %b35];
  %v93 = select i1 %v92, i32 %c11, i32 %c12;
  %v94 = add i32 %v85, %v93;
  %v95 = select i1 %v92, i32 %c14, i32 %c0;
  %v96 = add i32 %v85, %c19;
  %v97 = and i32 %v96, %c20;
  %v98 = add i32 %v97, %v95;
  %v99 = select i1 %v92, i32 %c14, i32 %c0;
  %v100 = add i32 %v97, %v99;
  %v101 = icmp ugt i32 %v100, %v94;
  br i1 %v101, label %b37, label %b38;
%b37:
  call void @f1();
  unreachable;
%b38:
  %v102 = load i32* @g17, align 1;
  call void @f0(i32 %v97, i32 %v102, i32 %v99, i32 %c4, i1 %c27);
  store i32 %v98, i32* %v98, align 1;
  %v103 = load i32* @g4, align 1;
  %v104 = call i32 %v103(i32 %v98);
  %v105 = call i32 @f15();
  %v106 = add i32 %v105, %c13;
  %v107 = add i32 %v105, %c21;
  store i32 %v107, i32* %v106, align 1;
  %v108 = add i32 @g20, %c3;
  %v109 = load i32* %v108, align 1;
  %v110 = icmp eq i32 %v109, %c0;
  br i1 %v110, label %b54, label %b40;
%b39:
  declare i32 %v144;
  %v111 = icmp eq i32 %v144, %c0;
  br i1 %v111, label %b54, label %b40;
%b40:
  %v112 = phi i32 [%v144, %b39], [%v109, %b38];
  %v113 = add i32 %v112, %c1;
  %v114 = load i32* %v113, align 1;
  %v115 = icmp sgt i32 %v114, %c0;
  br i1 %v115, label %b41, label %b54;
%b41:
  %v116 = add i32 %v112, %c22;
  %v117 = add i32 %v112, %c23;
  br label %b42;
%b42:
  declare i32 %v128;
  %v118 = phi i32 [%v114, %b41], [%v128, %b44];
  declare i32 %v120;
  %v119 = phi i32 [%v114, %b41], [%v120, %b44];
  %v120 = add i32 %v119, %c9;
  %v121 = shl i32 %c4, %v120;
  %v122 = add i32 %v112, %c2;
  %v123 = mul i32 %v120, %c1;
  %v124 = add i32 %v122, %v123;
  %v125 = load i32* %v124, align 1;
  %v126 = icmp eq i32 %v119, %v118;
  br i1 %v126, label %b45, label %b46;
%b43:
  %v127 = icmp sgt i32 %v119, %c4;
  br i1 %v127, label %b44, label %b54;
%b44:
  %v128 = load i32* %v113, align 1;
  br label %b42;
%b45:
  store i32 %v120, i32* %v113, align 1;
  br label %b47;
%b46:
  store i32 %c0, i32* %v124, align 1;
  br label %b47;
%b47:
  %v129 = icmp eq i32 %v125, %c0;
  br i1 %v129, label %b43, label %b48;
%b48:
  %v130 = load i32* %v113, align 1;
  %v131 = load i32* %v116, align 1;
  %v132 = and i32 %v131, %v121;
  %v133 = icmp eq i32 %v132, %c0;
  br i1 %v133, label %b49, label %b50;
%b49:
  call void %v125();
  br label %b53;
%b50:
  %v134 = load i32* %v117, align 1;
  %v135 = and i32 %v134, %v121;
  %v136 = icmp eq i32 %v135, %c0;
  %v137 = add i32 %v112, %c24;
  %v138 = mul i32 %v120, %c1;
  %v139 = add i32 %v137, %v138;
  %v140 = load i32* %v139, align 1;
  br i1 %v136, label %b51, label %b52;
%b51:
  call void %v125(i32 %c0, i32 %v140);
  br label %b53;
%b52:
  call void %v125(i32 %v140);
  br label %b53;
%b53:
  %v141 = load i32* %v113, align 1;
  %v142 = icmp eq i32 %v130, %v141;
  %v143 = add i32 @g20, %c3;
  %v144 = load i32* %v143, align 1;
  %v145 = icmp eq i32 %v144, %v112;
  %v146 = and i1 %v142, %v145;
  br i1 %v146, label %b43, label %b39;
%b54:
  %v147 = add i32 @g20, %c25;
  %v148 = load i32* %v147, align 1;
  %v149 = icmp eq i32 %v148, %c0;
  br i1 %v149, label %b56, label %b55;
%b55:
  call void %v148(i32 @g20);
  br label %b56;
%b56:
  %v150 = load i32* @g2, align 1;
  call void %v150(i32 %c0);
  call void @f1();
  unreachable;
}
