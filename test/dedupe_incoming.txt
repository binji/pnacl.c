# FLAGS: --trace-function-filter=main
# FILE: res/dedupe_incoming.pexe
function i32 @f1(i32 %p0, i32 %p1) {  // BlockID = 12
%b0:
  %v0 = trunc i32 %p1 to i8;
  %v1 = alloca i8, i32 %c5, align 4;
  %v2 = alloca i8, i32 %c2, align 4;
  %v3 = alloca i8, i32 %c5, align 4;
  %v4 = alloca i8, i32 %c3, align 8;
  %v5 = sext i8 %v0 to i32;
  switch i32 %v5 {
    default: br label %b2;
    i32 97: br label %b5;
    i32 101: br label %b5;
    i32 103: br label %b5;
    i32 48: br label %b5;
    i32 99: br label %b1;
    i32 102: br label %b1;
    i32 122: br label %b1;
    i32 57: br label %b1;
  }
%b1:
  br label %b5;
%b2:
  %v6 = call i32 @f49();
  %v7 = add i32 %v6, %c6;
  %v8 = load i32* %v7, align 1;
  %v9 = tail call i32 @f19(i32 @g0);
  store i32 @g0, i32* %v3, align 1;
  %v10 = add i32 %v3, %c3;
  store i32 %v9, i32* %v10, align 1;
  %v11 = add i32 %v3, %c1;
  store i32 @g24, i32* %v11, align 1;
  %v12 = add i32 %v3, %c2;
  store i32 %c0, i32* %v12, align 1;
  %v13 = add i32 %v9, %c0;
  %v14 = add i32 %v2, %c1;
  store i32 %v13, i32* %v14, align 1;
  store i32 %v3, i32* %v2, align 1;
  %v15 = add i32 %v2, %c3;
  store i32 %c7, i32* %v15, align 1;
  %v16 = add i32 %v8, %c1;
  %v17 = load i32* %v16, align 1;
  %v18 = add i32 %v17, %c2;
  %v19 = load i16* %v18, align 1;
  %v20 = sext i16 %v19 to i32;
  %v21 = and i32 %v20, %c8;
  %v22 = icmp eq i32 %v21, %c4;
  br i1 %v22, label %b3, label %b4;
%b3:
  %v23 = or i32 %v20, %c8;
  %v24 = trunc i32 %v23 to i16;
  store i16 %v24, i16* %v18, align 1;
  %v25 = add i32 %v17, %c9;
  %v26 = load i32* %v25, align 1;
  %v27 = and i32 %v26, %c10;
  store i32 %v27, i32* %v25, align 1;
  br label %b4;
%b4:
  %v28 = call i32 @f29(i32 %v8, i32 %v17, i32 %v2);
  br label %b5;
%b5:
  %v29 = phi i32 [%c4, %b4], [%c7, %b1], [%c0, %b0];
  store i32 %v29, i32* %v4, align 1;
  %v30 = call i32 @f49();
  %v31 = add i32 %v30, %c6;
  %v32 = load i32* %v31, align 1;
  store i32 %v4, i32* %v1, align 1;
  %v33 = add i32 %v32, %c1;
  %v34 = load i32* %v33, align 1;
  %v35 = call i32 @f20(i32 %v32, i32 %v34, i32 @g1, i32 %v1);
  ret i32 %c4;
}
